#!/bin/bash

function configure_user {

USERNAME=$1
USERHOME=/home/$USERNAME
PASSWORD=`echo -n $USERNAME$SALT | md5sum | head --bytes=8`

if ! id -u $1 >/dev/null 2>&1; then
  adduser --disabled-password --gecos "" $USERNAME
  echo "$USERNAME:$PASSWORD" | chpasswd
fi

adduser $USERNAME turtlebot 

pushd $USERHOME

ROS_WORKSPACE=$USERHOME/ROS

mkdir -p $USERHOME/.ros

chown -R $USERNAME:$USERNAME $USERHOME/.ros || true

sudo -u $USERNAME -H rosdep update || true

# environment setup
if ! grep -Fxq "source /opt/ros/$ROS_DIST/setup.bash" $USERHOME/.bashrc; then
  echo "source /opt/ros/$ROS_DIST/setup.bash" >> $USERHOME/.bashrc
fi

if [ ! -d $ROS_WORKSPACE ]; then
  mkdir $ROS_WORKSPACE
  chown $USERNAME:$USERNAME $ROS_WORKSPACE
fi

if ! grep -Fxq "# AUTOGENERATED ROS CONFIG !!!" $USERHOME/.bashrc; then
BASH_CONFIG="
# AUTOGENERATED ROS CONFIG !!!
source /usr/local/bin/roshost
alias roshost=\". /usr/local/bin/roshost\"
export ROS_WORKSPACE="$ROS_WORKSPACE"
export ROS_PACKAGE_PATH=\"\$ROS_WORKSPACE:\$ROS_PACKAGE_PATH\"
export ROBOT=\`hostname\`
export TURTLEBOT_BATTERY=\"/sys/class/power_supply/BAT0\"
export TURTLEBOT_BASE=\"roomba\"
export TURTLEBOT_STACKS=\"circles\"
export TURTLEBOT_SIMULATION=\"false\"
export GAZEBO_MODEL_DATABASE_URI=\"http://gazebosim.org/models\"
"
echo "$BASH_CONFIG" >> $USERHOME/.bashrc
fi

sudo -H -u $USERNAME -i bash -c 'mkdir -p ~/ROS;'

popd

}

UBUNTU_DIST="precise"
ROS_DIST="hydro"

STATEFILE=/tmp/rosinstallstate

LAPTOP=1
STATE=`cat $STATEFILE`

if [ -f $STATEFILE ]; then
  export STATE=`cat $STATEFILE`
else
  export STATE=0
fi

set -e
if [[ $EUID -ne 0 ]]; then
  echo "You must be a root user" 2>&1
  exit 1
fi

SCRIPTDIR=`pwd`

RUNUSERNAME=$SUDO_USER

pushd /tmp

if (( $STATE < 1 )); then

  if [ ! -f /etc/apt/sources.list.d/ros-latest.list ]; then
    echo "deb http://packages.ros.org/ros/ubuntu $UBUNTU_DIST main" > /etc/apt/sources.list.d/ros-latest.list
    wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  fi

  PACKAGES="ros-$ROS_DIST-desktop-full ros-$ROS_DIST-turtlebot ros-$ROS_DIST-turtlebot-apps ros-$ROS_DIST-turtlebot-create ros-$ROS_DIST-turtlebot-viz ros-$ROS_DIST-audio-common vim git subversion openssh-server chrony git-gui screen synaptic libzbar-dev python-rosinstall"

  if [ ! -f /etc/apt/sources.list.d/webupd8team-jupiter-$UBUNTU_DIST.list -a  -n $LAPTOP ]; then
    add-apt-repository ppa:webupd8team/jupiter
  fi

  PACKAGES="$PACKAGES jupiter"

  apt-get update

  if [ -z $PACKAGES ]; then
    apt-get -y dist-upgrade
  else
    apt-get -y install $PACKAGES
  fi

  ntpdate ntp.ubuntu.com

  if [ ! -f /etc/ros/rosdep/sources.list.d/20-default.list ]; then
    rosdep init
  fi
  rosdep update

fi
echo "1" > $STATEFILE

if (( $STATE < 2 )); then

  echo "enabled=0" > /etc/default/apport

  if [ -n $LAPTOP ]; then
    # disable powersave mode for battery operation
    echo "high" > /var/jupiter/battery
    gsettings set org.gnome.settings-daemon.plugins.power lid-close-battery-action nothing
  fi

  if [ -z `egrep -i '^turtlebot' /etc/group` ]; then
    addgroup turtlebot
  fi

  if ! [ -f /etc/udev/rules.d/52-turtlebot.rules ] ; then

    echo 'ATTRS{idProduct}=="2008",ATTRS{idVendor}=="0557",MODE="666",GROUP="turtlebot"
ATTRS{idProduct}=="6001",ATTRS{idVendor}=="0403",MODE="666",GROUP="turtlebot"' >> /etc/udev/rules.d/52-turtlebot.rules

    service udev restart
  fi
fi
echo "2" > $STATEFILE

if (( $STATE < 3 )); then

  cp $SCRIPTDIR/roshost.sh /usr/local/bin/roshost
  chmod +x /usr/local/bin/roshost

fi
echo "3" > $STATEFILE

configure_user $RUNUSERNAME > /dev/null

declare -a TEAMS=("alpha" "beta" "gamma" "delta" "epsilon" "zeta" "eta" "theta" "iota" "kappa")
#declare -a TEAMS=("theta" "iota" "kappa")

SECRETLIST="$SCRIPTDIR/passwords.txt"

read -s -p "Enter password salt: " SALT
echo 

for TEAMNAME in "${TEAMS[@]}"
do
    echo "Creating user for team $TEAMNAME"
    configure_user "team_$TEAMNAME" > /dev/null
    echo "$USERNAME:$PASSWORD" >> $SECRETLIST
done

popd


